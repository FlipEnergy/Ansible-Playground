- name: Check if Bat version is installed
  ansible.builtin.command: bat --version
  register: bat_version_command
  ignore_errors: yes
  changed_when: False

- name: set Bat version fact
  set_fact:
    bat_version: "{{ bat_version_command.stdout | regex_search(regexp) }}"
  vars:
    regexp: '[0-9]+\.[0-9]+\.[0-9]+'
    cacheable: yes
  when: bat_version_command.rc == 0

- name: Download Bat x86_64
  ansible.builtin.unarchive:
    src: https://github.com/sharkdp/bat/releases/download/v{{ BAT_VERSION }}/bat-v{{ BAT_VERSION }}-x86_64-unknown-linux-gnu.tar.gz
    dest: /tmp
    extra_opts: [--strip-components=1]
    remote_src: yes
  when:
    - ansible_architecture == 'x86_64'
    - bat_version_command.rc != 0 or BAT_VERSION != bat_version

- name: Download Bat arm64
  ansible.builtin.unarchive:
    src: https://github.com/sharkdp/bat/releases/download/v{{ BAT_VERSION }}/bat-v{{ BAT_VERSION }}-aarch64-unknown-linux-gnu.tar.gz
    dest: /tmp
    extra_opts: [--strip-components=1]
    remote_src: yes
  when:
    - ansible_architecture == 'aarch64'
    - bat_version_command.rc != 0 or BAT_VERSION != bat_version

- name: Download Bat armv6l
  ansible.builtin.unarchive:
    src: https://github.com/sharkdp/bat/releases/download/v{{ BAT_VERSION }}/bat-v{{ BAT_VERSION }}-arm-unknown-linux-gnueabihf.tar.gz
    dest: /tmp
    extra_opts: [--strip-components=1]
    remote_src: yes
  when:
    - ansible_architecture == 'armv6l'
    - bat_version_command.rc != 0 or BAT_VERSION != bat_version

- name: Install Bat
  ansible.builtin.command: mv -f /tmp/bat /usr/local/bin/bat
  when:
    - bat_version_command.rc != 0 or BAT_VERSION != bat_version

- name: Set execute permissions for bat x86_64
  ansible.builtin.file:
    path: /usr/local/bin/bat
    mode: a+x
