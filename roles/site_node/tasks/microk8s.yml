---

- name: Install MicroK8s
  snap:
    name: microk8s
    classic: yes
    channel: "{{ MICROK8S_CHANNEL }}"

- name: Update snaps nightly
  command: snap set system refresh.timer=8:00-10:00

- name: Adding user {{ USER }} to microk8s group
  user:
    name: "{{ USER }}"
    groups: microk8s
    append: yes

- name: Get Join node command
  shell: microk8s add-node | grep 'Join node with:' | cut -d ' ' -f4-6
  register: join_node_command
  when: K8S_MASTER == inventory_hostname

- name: Get current node state
  shell: microk8s status | head -n 1
  register: node_status

- name: Non-masters join node
  command: "{{ hostvars[K8S_MASTER]['join_node_command'].stdout }}"
  when:
    - K8S_MASTER != inventory_hostname
    - node_status.stdout == 'microk8s is running'


- name: Get enabled MicroK8s addons
  shell: microk8s status | grep enabled | awk -F ':' '{print $1}'
  register: microk8s_enabled_addons
  when: K8S_MASTER == inventory_hostname

- name: Enable MicroK8s addons
  command: microk8s enable {{ item }}
  loop: "{{ MICROK8S_ADDONS }}"
  when:
    - K8S_MASTER == inventory_hostname
    - item not in microk8s_enabled_addons.stdout_lines
    - item != 'metallb'

- name: Enable metallb MicroK8s addon
  command: microk8s enable metallb
  args:
    stdin: "{{ METALLB_IP_RANGE }}"
  when:
    - K8S_MASTER == inventory_hostname
    - '"metallb" in MICROK8S_ADDONS'
    - '"metallb" not in microk8s_enabled_addons.stdout_lines'

# https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
# https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file
- name: Copy kubelet config
  copy:
    src: kubelet.conf
    dest: /etc/kubelet.conf
  notify: Restart kubelet service
